package com.eeeya.fantuan.server.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class YfTableExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected int offset = -1;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected int rows = -1;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public YfTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void setOffset(int offset) {
        this.offset=offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public int getOffset() {
        return offset;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public void setRows(int rows) {
        this.rows=rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public int getRows() {
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andMealTimeIsNull() {
            addCriterion("meal_time is null");
            return (Criteria) this;
        }

        public Criteria andMealTimeIsNotNull() {
            addCriterion("meal_time is not null");
            return (Criteria) this;
        }

        public Criteria andMealTimeEqualTo(Date value) {
            addCriterion("meal_time =", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeNotEqualTo(Date value) {
            addCriterion("meal_time <>", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeGreaterThan(Date value) {
            addCriterion("meal_time >", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("meal_time >=", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeLessThan(Date value) {
            addCriterion("meal_time <", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeLessThanOrEqualTo(Date value) {
            addCriterion("meal_time <=", value, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeIn(List<Date> values) {
            addCriterion("meal_time in", values, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeNotIn(List<Date> values) {
            addCriterion("meal_time not in", values, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeBetween(Date value1, Date value2) {
            addCriterion("meal_time between", value1, value2, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTimeNotBetween(Date value1, Date value2) {
            addCriterion("meal_time not between", value1, value2, "mealTime");
            return (Criteria) this;
        }

        public Criteria andMealTypeIsNull() {
            addCriterion("meal_type is null");
            return (Criteria) this;
        }

        public Criteria andMealTypeIsNotNull() {
            addCriterion("meal_type is not null");
            return (Criteria) this;
        }

        public Criteria andMealTypeEqualTo(Byte value) {
            addCriterion("meal_type =", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotEqualTo(Byte value) {
            addCriterion("meal_type <>", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeGreaterThan(Byte value) {
            addCriterion("meal_type >", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("meal_type >=", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeLessThan(Byte value) {
            addCriterion("meal_type <", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeLessThanOrEqualTo(Byte value) {
            addCriterion("meal_type <=", value, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeIn(List<Byte> values) {
            addCriterion("meal_type in", values, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotIn(List<Byte> values) {
            addCriterion("meal_type not in", values, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeBetween(Byte value1, Byte value2) {
            addCriterion("meal_type between", value1, value2, "mealType");
            return (Criteria) this;
        }

        public Criteria andMealTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("meal_type not between", value1, value2, "mealType");
            return (Criteria) this;
        }

        public Criteria andTableTypeIsNull() {
            addCriterion("table_type is null");
            return (Criteria) this;
        }

        public Criteria andTableTypeIsNotNull() {
            addCriterion("table_type is not null");
            return (Criteria) this;
        }

        public Criteria andTableTypeEqualTo(Byte value) {
            addCriterion("table_type =", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotEqualTo(Byte value) {
            addCriterion("table_type <>", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeGreaterThan(Byte value) {
            addCriterion("table_type >", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("table_type >=", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeLessThan(Byte value) {
            addCriterion("table_type <", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeLessThanOrEqualTo(Byte value) {
            addCriterion("table_type <=", value, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeIn(List<Byte> values) {
            addCriterion("table_type in", values, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotIn(List<Byte> values) {
            addCriterion("table_type not in", values, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeBetween(Byte value1, Byte value2) {
            addCriterion("table_type between", value1, value2, "tableType");
            return (Criteria) this;
        }

        public Criteria andTableTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("table_type not between", value1, value2, "tableType");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNull() {
            addCriterion("pay_type is null");
            return (Criteria) this;
        }

        public Criteria andPayTypeIsNotNull() {
            addCriterion("pay_type is not null");
            return (Criteria) this;
        }

        public Criteria andPayTypeEqualTo(Byte value) {
            addCriterion("pay_type =", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotEqualTo(Byte value) {
            addCriterion("pay_type <>", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThan(Byte value) {
            addCriterion("pay_type >", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeGreaterThanOrEqualTo(Byte value) {
            addCriterion("pay_type >=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThan(Byte value) {
            addCriterion("pay_type <", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeLessThanOrEqualTo(Byte value) {
            addCriterion("pay_type <=", value, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeIn(List<Byte> values) {
            addCriterion("pay_type in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotIn(List<Byte> values) {
            addCriterion("pay_type not in", values, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeBetween(Byte value1, Byte value2) {
            addCriterion("pay_type between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andPayTypeNotBetween(Byte value1, Byte value2) {
            addCriterion("pay_type not between", value1, value2, "payType");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdIsNull() {
            addCriterion("restaurant_Id is null");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdIsNotNull() {
            addCriterion("restaurant_Id is not null");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdEqualTo(Long value) {
            addCriterion("restaurant_Id =", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdNotEqualTo(Long value) {
            addCriterion("restaurant_Id <>", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdGreaterThan(Long value) {
            addCriterion("restaurant_Id >", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("restaurant_Id >=", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdLessThan(Long value) {
            addCriterion("restaurant_Id <", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdLessThanOrEqualTo(Long value) {
            addCriterion("restaurant_Id <=", value, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdIn(List<Long> values) {
            addCriterion("restaurant_Id in", values, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdNotIn(List<Long> values) {
            addCriterion("restaurant_Id not in", values, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdBetween(Long value1, Long value2) {
            addCriterion("restaurant_Id between", value1, value2, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andRestaurantIdNotBetween(Long value1, Long value2) {
            addCriterion("restaurant_Id not between", value1, value2, "restaurantId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdIsNull() {
            addCriterion("talk_group_id is null");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdIsNotNull() {
            addCriterion("talk_group_id is not null");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdEqualTo(Integer value) {
            addCriterion("talk_group_id =", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdNotEqualTo(Integer value) {
            addCriterion("talk_group_id <>", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdGreaterThan(Integer value) {
            addCriterion("talk_group_id >", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("talk_group_id >=", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdLessThan(Integer value) {
            addCriterion("talk_group_id <", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdLessThanOrEqualTo(Integer value) {
            addCriterion("talk_group_id <=", value, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdIn(List<Integer> values) {
            addCriterion("talk_group_id in", values, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdNotIn(List<Integer> values) {
            addCriterion("talk_group_id not in", values, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdBetween(Integer value1, Integer value2) {
            addCriterion("talk_group_id between", value1, value2, "talkGroupId");
            return (Criteria) this;
        }

        public Criteria andTalkGroupIdNotBetween(Integer value1, Integer value2) {
            addCriterion("talk_group_id not between", value1, value2, "talkGroupId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yf_table
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table yf_table
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}